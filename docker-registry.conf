
upstream docker-registry {
    server localhost:5000;
}
server {
    listen 8080;
    server_name suyulin.com;

    ssl on;
    ssl_certificate 1_www.suyulin.com_bundle.crt;
    ssl_certificate_key 2_www.suyulin.com.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;
    proxy_set_header Host       $http_host;   # required for Docker client sake
    proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP
    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads
    # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)
    chunked_transfer_encoding on;
    location /v2/ {
        if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
    }
    # let Nginx know about our auth file
    auth_basic              "Restricted";
    auth_basic_user_file    docker-registry.htpasswd;
    add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;
    proxy_pass                          http://docker-registry;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
    }
    location /_ping {
        auth_basic off;
        proxy_pass http://docker-registry;
    }
    location /v1/_ping {
        auth_basic off;
        proxy_pass http://docker-registry;
    }
}
# docker run -d -u root -v /var/run/docker.sock:/var/run/docker.sock  -v $(which docker):/usr/bin/docker  -p 9000:8080 --restart=always --name jenkins localhost:5000/jenkins
# mirror.ccs.tencentyun.com/library/golang